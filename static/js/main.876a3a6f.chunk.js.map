{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","numArr","App","useState","visibleGoods","setListOFGoods","copyArrGoods","setCopyArrGoods","selectValue","setSelectValue","secondCopyArr","className","type","onClick","reverse","sort","a","b","length","name","onChange","e","Number","target","value","filter","good","handleChange","map","item","ReactDOM","render","document","getElementById"],"mappings":"iOAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAmGtCC,EAjGO,WACpB,MAAuCC,oBAAS,GAAhD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAwCF,mBAAS,GAAD,OAAKH,IAArD,mBAAOM,EAAP,KAAqBC,EAArB,KACA,EAAsCJ,mBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAwBN,mBAAS,GAAD,OAAKH,IAA9BU,EAAP,oBAaA,OACE,sBAAKC,UAAU,MAAf,WACKP,GACD,wBACEQ,KAAK,SACLC,QAAS,kBAAOR,GAAe,IAC/BM,UAAU,oBAHZ,mBASAP,GACA,sBAAKO,UAAU,eAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAON,EAAgB,YAAID,GAAcQ,YAClDH,UAAU,gCAHZ,qBAOA,wBACEC,KAAK,SACLC,QAAS,kBAAON,EAAgB,YAAID,GAAcS,SAClDJ,UAAU,6BAHZ,iCAOA,wBACEC,KAAK,SACLC,QAAS,kBACPN,EAAgB,YAAID,GACjBS,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,YACjCP,UAAU,6BALZ,4BASA,qBAAKA,UAAU,oBAAf,SACE,wBACEQ,KAAK,SACLC,SAAU,SAACC,GAAD,OAnDD,SAACA,GACpBZ,EAAea,OAAOD,EAAEE,OAAOC,QAC/BjB,EAAgB,YAAIG,GACjBe,QAAO,SAAAC,GAAI,OAAIA,EAAKR,QAAUI,OAAOD,EAAEE,OAAOC,WAgDrBG,CAAaN,IAC/BG,MAAOhB,EAHT,SAKGP,EAAO2B,KAAI,SAAAC,GAAI,OACd,yBAEEL,MAAOK,EAFT,UAIG,2BACAA,IAJIA,UASb,wBACEjB,KAAK,SACLC,QA7DQ,WAChBN,EAAgB,GAAD,OAAKP,IACpBS,EAAe,IA4DPE,UAAU,+BAHZ,sBAUFP,GACA,gCACE,oBAAIO,UAAU,aAAd,yBAGA,6BACGL,EAAasB,KAAI,SAAAF,GAAI,OACpB,oBAAIf,UAAU,YAAd,SAAsCe,GAAPA,e,MCtG7CI,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.876a3a6f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst numArr: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nconst App: React.FC = () => {\n  const [visibleGoods, setListOFGoods] = useState(false);\n  const [copyArrGoods, setCopyArrGoods] = useState([...goodsFromServer]);\n  const [selectValue, setSelectValue] = useState(1);\n  const [secondCopyArr] = useState([...goodsFromServer]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectValue(Number(e.target.value));\n    setCopyArrGoods([...secondCopyArr]\n      .filter(good => good.length <= Number(e.target.value)));\n  };\n\n  const resetList = () => {\n    setCopyArrGoods([...goodsFromServer]);\n    setSelectValue(1);\n  };\n\n  return (\n    <div className=\"App\">\n      { !visibleGoods && (\n        <button\n          type=\"button\"\n          onClick={() => (setListOFGoods(true))}\n          className=\"button is-primary\"\n        >\n          Start\n        </button>\n      )}\n\n      { visibleGoods && (\n        <div className=\"App__buttons\">\n          <button\n            type=\"button\"\n            onClick={() => (setCopyArrGoods([...copyArrGoods].reverse()))}\n            className=\"button is-primary is-outlined\"\n          >\n            Reverse\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => (setCopyArrGoods([...copyArrGoods].sort()))}\n            className=\"button is-link is-outlined\"\n          >\n            Sort alphabetically\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => (\n              setCopyArrGoods([...copyArrGoods]\n                .sort((a, b) => a.length - b.length)))}\n            className=\"button is-link is-outlined\"\n          >\n            Sort by length\n          </button>\n          <div className=\"select is-success\">\n            <select\n              name=\"select\"\n              onChange={(e) => (handleChange(e))}\n              value={selectValue}\n            >\n              {numArr.map(item => (\n                <option\n                  key={item}\n                  value={item}\n                >\n                  {'Filter by world length  '}\n                  {item}\n                </option>\n              ))}\n            </select>\n          </div>\n          <button\n            type=\"button\"\n            onClick={resetList}\n            className=\"button is-danger is-outlined\"\n          >\n            Reset\n          </button>\n        </div>\n      )}\n\n      { visibleGoods && (\n        <div>\n          <h1 className=\"App__title\">\n            Goods list:\n          </h1>\n          <ul>\n            {copyArrGoods.map(good => (\n              <li className=\"App__item\" key={good}>{good}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}